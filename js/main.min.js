'use strict';

const navButton = document.querySelector('.nav__button')
const navList = document.querySelector('.nav__list')
const items = document.querySelectorAll('.nav__link');

const openNav = () => {
	navList.classList.toggle('hidden');
}


const closeNav = () => {
	navList.classList.add('hidden');
}

for (const itemsNAv of items) {
	itemsNAv.addEventListener('click', closeNav);
}
navButton.addEventListener('click', openNav);

window.addEventListener('mouseup',(event)=>{
  if (event.target != navList){
	 closeNav();
		}
});

'use strict';

// CHOOSE STYLES FOR CV-PREVIEW


// MENU OPEN-CLOSE STYLES

/* Con nextElementSibling al hacer 'click' sobre imagen (.img-design) se selecciona el elemento hermano(ul: design-fonts, design-colours o design-themes)*/

const preview = document.querySelector('.showpreview');
const selectImg= document.querySelectorAll('.img-design');
const allListElement =  document.querySelectorAll('.creation__design__options li ul');


const openCloseStyles = (event) => {

  const nextUl = event.target.nextElementSibling;
  if (nextUl.classList.contains('hidden')) {
    for (const selectList of allListElement) {
      selectList.classList.add('hidden');
    }
    nextUl.classList.remove('hidden');
  } else {
    nextUl.classList.add('hidden');
  }
}

for (const clickImg of selectImg) {
  clickImg.addEventListener('click', openCloseStyles);
}



// APPLY FONTS

const fonts = document.querySelectorAll('.font');

const cleanFontClasses = () => {
  preview.classList.remove('cookie', 'annie', 'philosopher');
}

const applyFont = (event) => {
	const fontClass = event.currentTarget.getAttribute('data-font-class');
  cleanFontClasses();
  preview.classList.add(fontClass);
}

for (const fontList of fonts) {
  fontList.addEventListener('click', applyFont);
}


// APLLY COLOURS

const colours = document.querySelectorAll('.colour');

const cleanColourClasses = () => {
  preview.classList.remove('red-green-lime', 'black-blue-lime', 'black-pink-grey');
}

const applyColour = (event) => {
  const colourClass = event.currentTarget.getAttribute('data-colour-class');
  cleanColourClasses();
  preview.classList.add(colourClass);
}

for (const colourList of colours) {
  colourList.addEventListener('click', applyColour);
}

// APPLY THEMES

const themes = document.querySelectorAll('.theme');

const cleanThemeClasses = () => {
  preview.classList.remove('dots', 'stripes', 'zigZag');
}

const applyTheme = (event) => {
  const themeClass = event.currentTarget.getAttribute('data-theme-class');
  cleanThemeClasses();
  preview.classList.add(themeClass);
}

for (const themeList of themes) {
  themeList.addEventListener('click', applyTheme);
}

'use strict';

///AQUI ESTAN LAS FUNCIONES COMUNES PARA DESPLEGAR Y CERRAR Y SELECTS DE AÑOS Y MESES//////
//función para desplegar sección

const openButtons = document.querySelectorAll('.button--open');
const displayForm =(event)=>{
	// llamo al evento
	// currentTarget coge el elemento (en este caso un boton) que dispara el evento. Le ponemos data-plus porque queremos que busque la id del elemento que tiene que mostrar
const plusId = event.currentTarget.getAttribute('data-idDesplegar');
	// data-plus: identificador del elemento, que queremos que se replique en el resto de elementos
	// hacemos una variable para crear el selector, event.currentTarget es el elemento que dispara el evento (hacer click)
const formContainer = document.getElementById(plusId);
	if (formContainer.style.display == 'block'){
		formContainer.style.display = 'none';
	} else {
		formContainer.style.display = 'block';
	}
}

for (const allButtons of openButtons){
	allButtons.addEventListener('click', displayForm);
}

//función para meses
const selectMonths =() => {
	let options = '';
	const monthsSelect = document.querySelectorAll('.month');
  const monthsArray = [
    "Ene",
    "Feb",
    "Mar",
    "Abr",
    "May",
    "Jun",
    "Jul",
    "Ago",
    "Sep",
    "Oct",
    "Nov",
    "Dic"
  ];

  for ( const allMonths of monthsArray){
    options += `<option>${allMonths}</option>`;
}
	for (const listMonth of monthsSelect) {
		listMonth.innerHTML = options;
	};
}
selectMonths();

//función para años
const yearsInput = () =>{
const years = 2018;
let selectYear = '';

for (let i = 1950; i<years; i++) {
selectYear = selectYear + '<option>' + (i)+ '</option>';
}

const yearsAll = document.querySelectorAll('.year');
	for (const listYears of yearsAll) {
		listYears.innerHTML = selectYear;
	};
}
yearsInput();

'use strict';

const photoFile =(evt)=> {
	const files = evt.target.files; // FileList object

	//Obtenemos la imagen del campo "file".
	for (let i = 0, f; f = files[i]; i++) {
		//Solo admitimos imágenes.
		if (!f.type.match('image.*')) {
			continue;
		}
		const reader = new FileReader();
		reader.onload = ((theFile)=> {
			return (e)=> {
				// Creamos la imagen.
				trigger.style = "background-image:url(" + e.target.result + ");";
				document.querySelector(".container__photo").innerHTML = ['<img class="thumb" src="', e.target.result,'" title="', escape(theFile.name), '"/>'].join('');
			};
		})(f);
		reader.readAsDataURL(f);
	}
}

const inputFile = document.querySelector('#files');
const trigger = document.querySelector('.trigger');

// función para que simule un clic en input
const simularClic=()=>{
	inputFile.click();
}
// hacemos clic en trigger y llamamos a la funcion
trigger.addEventListener('click', simularClic);
inputFile.addEventListener('change', photoFile);

'use strict';

// GENERAR NUEVO FORMULARIO DE EDUCACIÓN
let idEducationModifier = 2;
const addItemEducation =()=> {
	let repeatedItemEducation = `<div class="education-element" id="education-element${idEducationModifier}"><label class="label" for="titulo"></label><input class="class-input" id="titulo${idEducationModifier}" type="text" name="titulation" placeholder="Título*" required><section class="education-dates"><div class="date-container-from"><label class="label from">Desde</label><select id="start_month-education${idEducationModifier}" name="start_month" class="month"></select><select id="start_year-education${idEducationModifier}" name="start_year" class="year"></select></div><div class="date-container-until"><label class="label until">Hasta</label><select id="end_month-education${idEducationModifier}" name="end_month" class="month"></select><select id="end_year-education${idEducationModifier}" name="end_year" class="year"></select><div class="actualidad"><label for="actualidad" class="present-button-p">Actual</label><input class="present-button" id="actualidad-education${idEducationModifier}" type="checkbox" name="actualidad"></div></div></section><label class="label" for="centro"></label><input class="class-input" id="centro${idEducationModifier}" type="text" name="place" placeholder="Centro de estudios*" required><label class="label" for="description-education"></label><textarea class="description" id="description-education${idEducationModifier}" cols="30" rows="10" name="description" placeholder="Descripción"></textarea><button type="button" name="button" class="button--save save-education-button" id="save-education-button${idEducationModifier}" data-id="${idEducationModifier}">Guardar</button></div>`

	document.querySelector('.education-element').insertAdjacentHTML('beforeend', repeatedItemEducation);
	document.getElementById('save-education-button' + idEducationModifier).addEventListener('click',printEducationToPreview);
	idEducationModifier++;
	yearsInput ();
	selectMonths();
}

const newEducationButton = document.querySelector('.new-education-button');
newEducationButton.addEventListener('click',addItemEducation);

//PINTAR LA EDUCACIÓN EN PREVIEW
const printEducationToPreview =(event)=> {
	const  dataIdValue = event.currentTarget.getAttribute('data-id');
	document.getElementById('titulo-preview-id' + dataIdValue).innerHTML = document.getElementById('titulo' + dataIdValue).value;
	document.getElementById('from-education-preview-id' + dataIdValue).innerHTML =
	document.getElementById('start_month-education' + dataIdValue).value + ' ' +
	document.getElementById('start_year-education' + dataIdValue).value +  ' - ' ;
	if (document.getElementById('actualidad-education' + dataIdValue).checked) {
		document.getElementById('until-education-preview-id' + dataIdValue).innerHTML = ' Actual';
	}
	else {
		document.getElementById('until-education-preview-id' + dataIdValue).innerHTML =
		document.getElementById('end_month-education' + dataIdValue).value + ' ' +
		document.getElementById('end_year-education' + dataIdValue).value;
	}
	document.getElementById('centro-id' + dataIdValue).innerHTML = document.getElementById('centro' +dataIdValue).value;
	document.getElementById('description-education-preview-id' + dataIdValue).innerHTML = document.getElementById('description-education' + dataIdValue).value;
}
document.querySelector('.save-education-button').addEventListener('click',printEducationToPreview);

'use strict';

// GENERAR NUEVO FORMULARIO DE EXPERIENCIA
let idExperienceModifier = 2;
const addItemExperience =()=> {
	let repeatedItemExperience = `<div class="experience-element" id="experience-element${idExperienceModifier}"><input class="class-input" id="job${idExperienceModifier}" type="text" name="puesto" placeholder="Puesto${idExperienceModifier}"><section class="experience-dates"><div class="date-container-from"><label class="label from">Desde</label><select id="start_month-job${idExperienceModifier}" name="start_month" class="month"></select><select id="start_year-job${idExperienceModifier}" name="start_year" class="year"></select></div><div class="date-container-until"><label class="label until" >Hasta</label><select id="end_month-job${idExperienceModifier}" name="end_month" class="month"></select><select id="end_year-job${idExperienceModifier}" name="end_year" class="year"></select><div class="actualidad"><label for="actualidad" class="present-button-p">Actual</label><input class="present-button" id="actualidad-job${idExperienceModifier}" type="checkbox" name="actualidad"></div></div></section><input class="class-input" id="company${idExperienceModifier}" type="text" name="company" placeholder="Empresa"><textarea class="experience-text" id="description-job${idExperienceModifier}" name="description" rows="8" cols="80" placeholder="Despripción del puesto"></textarea><button type="button" name="button" class="button--save save-experience-button" id="save-experience-button-${idExperienceModifier}" data-id="${idExperienceModifier}">Guardar</button></div>`;

	document.querySelector('.experience-element').insertAdjacentHTML('beforeend', repeatedItemExperience);
	document.getElementById('save-experience-button-' + idExperienceModifier).addEventListener('click',printProfessionalExperienceToPreview);
	idExperienceModifier++;
	yearsInput ();
	selectMonths();
}

const newExperienceButton = document.querySelector('.new-experience-button');
newExperienceButton.addEventListener('click',addItemExperience);


//PINTAR LA EXPERIENCIA EN PREVIEW
const printProfessionalExperienceToPreview =(event)=> {
	const dataIdValue = event.currentTarget.getAttribute('data-id');
	document.getElementById('job-preview-id-' + dataIdValue).innerHTML = document.getElementById('job' + dataIdValue).value;
	document.getElementById('from-job-preview-id' + dataIdValue).innerHTML =
	document.getElementById('start_month-job' + dataIdValue).value + ' ' +
	document.getElementById('start_year-job' + dataIdValue).value + ' - ' ;

	if (document.getElementById('actualidad-job' + dataIdValue).checked) {
		document.getElementById('until-job-preview-id' + dataIdValue).innerHTML = ' Actual';
	}
	else {
		document.getElementById('until-job-preview-id' + dataIdValue).innerHTML =
		document.getElementById('end_month-job' + dataIdValue).value + ' ' +
		document.getElementById('end_year-job' + dataIdValue).value;
	}
	document.getElementById('place-preview-id' + dataIdValue).innerHTML = document.getElementById('company' + dataIdValue).value;
	document.getElementById('description-job-preview-id' + dataIdValue).innerHTML = document.getElementById('description-job' + dataIdValue).value;
}
document.querySelector('.save-experience-button').addEventListener('click',printProfessionalExperienceToPreview);

'use strict';

// GENERAR NUEVO FORMULARIO DE IDIOMAS
let idLanguageModifier = 2;
const  addItemLanguage =()=> {
	// let repeatedItemLanguage = '`<div class="language-element"><label class="label" for="language-name' + idLanguageModifier + '"></label>' + '<input class="language-name class-input" id="language-name' + idLanguageModifier + '" type="text" name="language-name" placeholder="Idioma ' + idLanguageModifier +'">' + '<select id="language-level' + idLanguageModifier  +'" name="level" class="level"><option value="nivel">Nivel</option><option >--</option><option>Básico</option><option>Intermedio</option><option>Alto</option><option>Nativo</option></select><button type="button" name="button" class="button--save save-languages-button" id="save-languages-button' + idLanguageModifier +'" data-id="' + idLanguageModifier + '">Guardar</button></div>';

	let repeatedItemLanguage = `<div class="language-element"><label class="label" for="language-name${idLanguageModifier}"></label><input class="language-name class-input" id="language-name${idLanguageModifier}" type="text" name="language-name" placeholder="Idioma ${idLanguageModifier}"><select id="language-level${idLanguageModifier}" name="level" class="level"><option value="nivel">Nivel</option><option >--</option><option>Básico</option><option>Intermedio</option><option>Alto</option><option>Nativo</option></select><button type="button" name="button" class="button--save save-languages-button" id="save-languages-button${idLanguageModifier}" data-id="${idLanguageModifier}">Guardar</button></div>`;


	const languageElement = document.querySelector('.language-element');
	languageElement.insertAdjacentHTML('beforeend', repeatedItemLanguage);
	document.getElementById(`save-languages-button${idLanguageModifier}`).addEventListener('click',printLanguagesToPreview);
	idLanguageModifier++;
}

const newLanguageButton = document.querySelector('.new-language-button');
newLanguageButton.addEventListener('click',addItemLanguage);

//PINTAR IDIOMA EN PREVIEW


const printLanguagesToPreview =(event)=> {
	const dataIdValue = event.currentTarget.getAttribute('data-id');
	document.getElementById(`language-name${dataIdValue}-preview-id`).innerHTML = `${document.getElementById(`language-name${dataIdValue}`).value}  |  ${document.getElementById(`language-level${dataIdValue}`).value}`;
	//
	// document.getElementById('language-level' + dataIdValue + '-preview-id').innerHTML = document.getElementById('language-level' + dataIdValue).value;
}
document.querySelector('.save-languages-button').addEventListener('click',printLanguagesToPreview);

'use strict';

// GENERAR NUEVO FORMULARIO DE IT
let idItModifier = 2;
const addItemIt =()=> {
	let repeatedItemIt = '<div class="it-element"><label class="label" for="it-name' + idItModifier + '"></label><input class="it-name class-input" id="it-name' + idItModifier + '" type="text" name="it-name" placeholder="Tecnología ' + idItModifier + '"><select id="it-level' + idItModifier + '" name="level" class="level"><option value="nivel">Nivel</option><option >--</option><option>Básico</option><option>Intermedio</option><option>Alto</option></select><button type="button" name="button" class="button--save save-it-button" id="save-it-button' + idItModifier + '" data-id="' + idItModifier + '">Guardar</button></div>';

	const itElement = document.querySelector('.it-element');
	itElement.insertAdjacentHTML('beforeend', repeatedItemIt);
	document.getElementById('save-it-button' + idItModifier).addEventListener('click',printItToPreview);
	idItModifier++;
}

const newItButton = document.querySelector('.new-it-button');
newItButton.addEventListener('click',addItemIt);

//PINTAR IT EN PREVIEW
const printItToPreview =(event)=> {
	const dataIdValue = event.currentTarget.getAttribute('data-id');
	document.getElementById('it-name' + dataIdValue + '-preview-id').innerHTML = document.getElementById('it-name' + dataIdValue).value + '  |  '+document.getElementById('it-level' + dataIdValue).value;
	// document.getElementById('it-level' + dataIdValue + '-preview-id').innerHTML = document.getElementById('it-level' + dataIdValue).value;
}
document.querySelector('.save-it-button').addEventListener('click',printItToPreview);

'use strict';

// GENERAR NUEVO FORMULARIO DE SKILLS
let idSkillsModifier = 2;
const addItemSkills =()=> {
	
	let repeatedItemSkills = `<div class="skills-element"><label class="label" for="skill-element${idSkillsModifier}"></label><input class="skills-element class-input" id="skill-element${idSkillsModifier}" type="text" name="skill-element" placeholder="Destreza ${idSkillsModifier}"><button type="button" name="button" class="button--save save-skills-button" id="save-skills-button${idSkillsModifier}" data-id="${idSkillsModifier}">Guardar</button></div>`;



	const skillsElement = document.querySelector('.skills-element');
	skillsElement.insertAdjacentHTML('beforeend', repeatedItemSkills);
	document.getElementById(`save-skills-button${idSkillsModifier}`).addEventListener('click',printSkillsToPreview);
	idSkillsModifier++;
}

const newSkillsButton = document.querySelector('.new-skills-button');
newSkillsButton.addEventListener('click',addItemSkills);

//PINTAR SKILL EN PREVIEW
const printSkillsToPreview =(event)=> {
	const dataIdValue = event.currentTarget.getAttribute('data-id');
	document.getElementById(`skill-element${dataIdValue}-preview-id`).innerHTML = document.getElementById(`skill-element${dataIdValue}`).value;
}

document.querySelector('.save-skills-button').addEventListener('click',printSkillsToPreview);

'use strict';

// SECCIÓN GUARDAR DATOS FORMULARIO EN PREVIEW (4FUNCIONES)
const printPersonalDataToPreview =()=> {
 	document.getElementById('personal-data--name').innerHTML = document.getElementById('input-name').value;
	document.getElementById('personal-data--surname').innerHTML = document.getElementById('input-surname').value;
	document.getElementById('personal-data--job').innerHTML = document.getElementById('input-profession').value;
	document.getElementById('preview__direction--phone').innerHTML = document.getElementById('input-phone').value;
	document.getElementById('preview__direction--date').innerHTML = document.getElementById('input-birthdate').value;
	document.getElementById('preview__direction--mail').innerHTML = document.getElementById('input-email').value;
	document.getElementById('preview__direction--adress').innerHTML = document.getElementById('input-address').value;
	document.getElementById('preview__summary').innerHTML = document.getElementById('text-aboutme').value;
	document.getElementById('preview__rrss--twitter').innerHTML = document.getElementById('input-twitter').value;
	document.getElementById('preview__rrss--linkedin').innerHTML = document.getElementById('input-linkedin').value;
	document.getElementById('preview__rrss--facebook').innerHTML = document.getElementById('input-facebook').value;
}
document.querySelector('.save-data-button').addEventListener('click',printPersonalDataToPreview);

//# sourceMappingURL=main.min.js.map
